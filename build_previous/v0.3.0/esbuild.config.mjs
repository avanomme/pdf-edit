import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import path from "path";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

// Copy PDF.js worker file to the output directory
const copyPdfWorker = {
  name: "copy-pdf-worker",
  setup(build) {
    build.onEnd(() => {
      const workerPath = path.join(
        "node_modules",
        "pdfjs-dist",
        "build",
        "pdf.worker.min.js"
      );
      const outputPath = path.join(".", "pdf.worker.min.js");
      fs.copyFileSync(workerPath, outputPath);
    });
  },
};

esbuild
  .build({
    banner: {
      js: banner,
    },
    entryPoints: ["main_v3.ts"],
    bundle: true,
    external: [
      "obsidian",
      "electron",
      "@codemirror/autocomplete",
      "@codemirror/collab",
      "@codemirror/commands",
      "@codemirror/language",
      "@codemirror/lint",
      "@codemirror/search",
      "@codemirror/state",
      "@codemirror/view",
      "@lezer/common",
      "@lezer/highlight",
      "@lezer/lr",
      ...builtins,
    ],
    format: "cjs",
    target: "es2018",
    logLevel: "info",
    sourcemap: prod ? false : "inline",
    treeShaking: true,
    outfile: "main.js",
    plugins: [copyPdfWorker],
  })
  .catch(() => process.exit(1));
